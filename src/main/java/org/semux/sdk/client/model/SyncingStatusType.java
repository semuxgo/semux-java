/*
 * Semux API
 * Semux is an experimental high-performance blockchain platform that powers decentralized application.
 *
 * OpenAPI spec version: 2.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.semux.sdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * SyncingStatusType
 */

public class SyncingStatusType {
  @JsonProperty("syncing")
  private Boolean syncing = null;

  @JsonProperty("startingHeight")
  private String startingHeight = null;

  @JsonProperty("currentHeight")
  private String currentHeight = null;

  @JsonProperty("targetHeight")
  private String targetHeight = null;

  public SyncingStatusType syncing(Boolean syncing) {
    this.syncing = syncing;
    return this;
  }

   /**
   * Whether the node is syncing
   * @return syncing
  **/
  @ApiModelProperty(required = true, value = "Whether the node is syncing")
  public Boolean isSyncing() {
    return syncing;
  }

  public void setSyncing(Boolean syncing) {
    this.syncing = syncing;
  }

  public SyncingStatusType startingHeight(String startingHeight) {
    this.startingHeight = startingHeight;
    return this;
  }

   /**
   * The block height at which the sync started
   * @return startingHeight
  **/
  @ApiModelProperty(value = "The block height at which the sync started")
  public String getStartingHeight() {
    return startingHeight;
  }

  public void setStartingHeight(String startingHeight) {
    this.startingHeight = startingHeight;
  }

  public SyncingStatusType currentHeight(String currentHeight) {
    this.currentHeight = currentHeight;
    return this;
  }

   /**
   * The current block height
   * @return currentHeight
  **/
  @ApiModelProperty(value = "The current block height")
  public String getCurrentHeight() {
    return currentHeight;
  }

  public void setCurrentHeight(String currentHeight) {
    this.currentHeight = currentHeight;
  }

  public SyncingStatusType targetHeight(String targetHeight) {
    this.targetHeight = targetHeight;
    return this;
  }

   /**
   * The target block height
   * @return targetHeight
  **/
  @ApiModelProperty(value = "The target block height")
  public String getTargetHeight() {
    return targetHeight;
  }

  public void setTargetHeight(String targetHeight) {
    this.targetHeight = targetHeight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncingStatusType syncingStatusType = (SyncingStatusType) o;
    return Objects.equals(this.syncing, syncingStatusType.syncing) &&
        Objects.equals(this.startingHeight, syncingStatusType.startingHeight) &&
        Objects.equals(this.currentHeight, syncingStatusType.currentHeight) &&
        Objects.equals(this.targetHeight, syncingStatusType.targetHeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(syncing, startingHeight, currentHeight, targetHeight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncingStatusType {\n");
    
    sb.append("    syncing: ").append(toIndentedString(syncing)).append("\n");
    sb.append("    startingHeight: ").append(toIndentedString(startingHeight)).append("\n");
    sb.append("    currentHeight: ").append(toIndentedString(currentHeight)).append("\n");
    sb.append("    targetHeight: ").append(toIndentedString(targetHeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

