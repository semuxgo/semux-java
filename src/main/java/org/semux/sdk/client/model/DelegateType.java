/*
 * Semux API
 * Semux is an experimental high-performance blockchain platform that powers decentralized application.
 *
 * OpenAPI spec version: 2.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.semux.sdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * DelegateType
 */

public class DelegateType {
  @JsonProperty("address")
  private String address = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("registeredAt")
  private String registeredAt = null;

  @JsonProperty("votes")
  private String votes = null;

  @JsonProperty("blocksForged")
  private String blocksForged = null;

  @JsonProperty("turnsHit")
  private String turnsHit = null;

  @JsonProperty("turnsMissed")
  private String turnsMissed = null;

  @JsonProperty("validator")
  private Boolean validator = null;

  public DelegateType address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Delegate address
   * @return address
  **/
  @ApiModelProperty(value = "Delegate address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public DelegateType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Delegate name
   * @return name
  **/
  @ApiModelProperty(value = "Delegate name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DelegateType registeredAt(String registeredAt) {
    this.registeredAt = registeredAt;
    return this;
  }

   /**
   * Delegate registration block number
   * @return registeredAt
  **/
  @ApiModelProperty(value = "Delegate registration block number")
  public String getRegisteredAt() {
    return registeredAt;
  }

  public void setRegisteredAt(String registeredAt) {
    this.registeredAt = registeredAt;
  }

  public DelegateType votes(String votes) {
    this.votes = votes;
    return this;
  }

   /**
   * Total votes of the delegate
   * @return votes
  **/
  @ApiModelProperty(value = "Total votes of the delegate")
  public String getVotes() {
    return votes;
  }

  public void setVotes(String votes) {
    this.votes = votes;
  }

  public DelegateType blocksForged(String blocksForged) {
    this.blocksForged = blocksForged;
    return this;
  }

   /**
   * The number of blocks produced by this delegate
   * @return blocksForged
  **/
  @ApiModelProperty(value = "The number of blocks produced by this delegate")
  public String getBlocksForged() {
    return blocksForged;
  }

  public void setBlocksForged(String blocksForged) {
    this.blocksForged = blocksForged;
  }

  public DelegateType turnsHit(String turnsHit) {
    this.turnsHit = turnsHit;
    return this;
  }

   /**
   * Forged blocks when the delegate is a primary validator
   * @return turnsHit
  **/
  @ApiModelProperty(value = "Forged blocks when the delegate is a primary validator")
  public String getTurnsHit() {
    return turnsHit;
  }

  public void setTurnsHit(String turnsHit) {
    this.turnsHit = turnsHit;
  }

  public DelegateType turnsMissed(String turnsMissed) {
    this.turnsMissed = turnsMissed;
    return this;
  }

   /**
   * Missed blocks when the delegate is a primary validator
   * @return turnsMissed
  **/
  @ApiModelProperty(value = "Missed blocks when the delegate is a primary validator")
  public String getTurnsMissed() {
    return turnsMissed;
  }

  public void setTurnsMissed(String turnsMissed) {
    this.turnsMissed = turnsMissed;
  }

  public DelegateType validator(Boolean validator) {
    this.validator = validator;
    return this;
  }

   /**
   * Whether the delegate is currently a validator
   * @return validator
  **/
  @ApiModelProperty(value = "Whether the delegate is currently a validator")
  public Boolean isValidator() {
    return validator;
  }

  public void setValidator(Boolean validator) {
    this.validator = validator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DelegateType delegateType = (DelegateType) o;
    return Objects.equals(this.address, delegateType.address) &&
        Objects.equals(this.name, delegateType.name) &&
        Objects.equals(this.registeredAt, delegateType.registeredAt) &&
        Objects.equals(this.votes, delegateType.votes) &&
        Objects.equals(this.blocksForged, delegateType.blocksForged) &&
        Objects.equals(this.turnsHit, delegateType.turnsHit) &&
        Objects.equals(this.turnsMissed, delegateType.turnsMissed) &&
        Objects.equals(this.validator, delegateType.validator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, name, registeredAt, votes, blocksForged, turnsHit, turnsMissed, validator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DelegateType {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registeredAt: ").append(toIndentedString(registeredAt)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("    blocksForged: ").append(toIndentedString(blocksForged)).append("\n");
    sb.append("    turnsHit: ").append(toIndentedString(turnsHit)).append("\n");
    sb.append("    turnsMissed: ").append(toIndentedString(turnsMissed)).append("\n");
    sb.append("    validator: ").append(toIndentedString(validator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

