/*
 * Semux API
 * Semux is an experimental high-performance blockchain platform that powers decentralized application.
 *
 * OpenAPI spec version: 2.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.semux.sdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ApiHandlerResponse
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "ApiHandlerResponse", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = GetInfoResponse.class, name = "GetInfoResponse"),
  @JsonSubTypes.Type(value = LocalCallResponse.class, name = "LocalCallResponse"),
  @JsonSubTypes.Type(value = DeleteAccountResponse.class, name = "DeleteAccountResponse"),
  @JsonSubTypes.Type(value = GetVoteResponse.class, name = "GetVoteResponse"),
  @JsonSubTypes.Type(value = GetSyncingStatusResponse.class, name = "GetSyncingStatusResponse"),
  @JsonSubTypes.Type(value = SignMessageResponse.class, name = "SignMessageResponse"),
  @JsonSubTypes.Type(value = DoTransactionResponse.class, name = "DoTransactionResponse"),
  @JsonSubTypes.Type(value = GetValidatorsResponse.class, name = "GetValidatorsResponse"),
  @JsonSubTypes.Type(value = GetPendingTransactionsResponse.class, name = "GetPendingTransactionsResponse"),
  @JsonSubTypes.Type(value = GetAccountResponse.class, name = "GetAccountResponse"),
  @JsonSubTypes.Type(value = GetAccountsResponse.class, name = "GetAccountsResponse"),
  @JsonSubTypes.Type(value = GetAccountVotesResponse.class, name = "GetAccountVotesResponse"),
  @JsonSubTypes.Type(value = AddNodeResponse.class, name = "AddNodeResponse"),
  @JsonSubTypes.Type(value = GetAccountTransactionsResponse.class, name = "GetAccountTransactionsResponse"),
  @JsonSubTypes.Type(value = GetPeersResponse.class, name = "GetPeersResponse"),
  @JsonSubTypes.Type(value = GetAccountInternalTransactionsResponse.class, name = "GetAccountInternalTransactionsResponse"),
  @JsonSubTypes.Type(value = LocalCreateResponse.class, name = "LocalCreateResponse"),
  @JsonSubTypes.Type(value = CreateAccountResponse.class, name = "CreateAccountResponse"),
  @JsonSubTypes.Type(value = ComposeRawTransactionResponse.class, name = "ComposeRawTransactionResponse"),
  @JsonSubTypes.Type(value = GetBlockResponse.class, name = "GetBlockResponse"),
  @JsonSubTypes.Type(value = GetAccountStorageResponse.class, name = "GetAccountStorageResponse"),
  @JsonSubTypes.Type(value = GetDelegateResponse.class, name = "GetDelegateResponse"),
  @JsonSubTypes.Type(value = GetVotesResponse.class, name = "GetVotesResponse"),
  @JsonSubTypes.Type(value = GetAccountPendingTransactionsResponse.class, name = "GetAccountPendingTransactionsResponse"),
  @JsonSubTypes.Type(value = EstimateGasResponse.class, name = "EstimateGasResponse"),
  @JsonSubTypes.Type(value = GetRootResponse.class, name = "GetRootResponse"),
  @JsonSubTypes.Type(value = GetTransactionLimitsResponse.class, name = "GetTransactionLimitsResponse"),
  @JsonSubTypes.Type(value = VerifyMessageResponse.class, name = "VerifyMessageResponse"),
  @JsonSubTypes.Type(value = GetLatestBlockNumberResponse.class, name = "GetLatestBlockNumberResponse"),
  @JsonSubTypes.Type(value = SignRawTransactionResponse.class, name = "SignRawTransactionResponse"),
  @JsonSubTypes.Type(value = GetTransactionResultResponse.class, name = "GetTransactionResultResponse"),
  @JsonSubTypes.Type(value = GetTransactionResponse.class, name = "GetTransactionResponse"),
  @JsonSubTypes.Type(value = GetDelegatesResponse.class, name = "GetDelegatesResponse"),
  @JsonSubTypes.Type(value = GetLatestBlockResponse.class, name = "GetLatestBlockResponse"),
  @JsonSubTypes.Type(value = GetAccountCodeResponse.class, name = "GetAccountCodeResponse"),
})

public class ApiHandlerResponse {
  @JsonProperty("success")
  private Boolean success = null;

  @JsonProperty("message")
  private String message = null;

  public ApiHandlerResponse success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Whether this operation was processed successfully
   * @return success
  **/
  @ApiModelProperty(required = true, value = "Whether this operation was processed successfully")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public ApiHandlerResponse message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Success/error message
   * @return message
  **/
  @ApiModelProperty(value = "Success/error message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiHandlerResponse apiHandlerResponse = (ApiHandlerResponse) o;
    return Objects.equals(this.success, apiHandlerResponse.success) &&
        Objects.equals(this.message, apiHandlerResponse.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiHandlerResponse {\n");
    
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

