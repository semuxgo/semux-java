/*
 * Semux API
 * Semux is an experimental high-performance blockchain platform that powers decentralized application.
 *
 * OpenAPI spec version: 2.5.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.semux.sdk.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * InfoType
 */

public class InfoType {
  /**
   * The connected network
   */
  public enum NetworkEnum {
    MAINNET("MAINNET"),
    
    TESTNET("TESTNET"),
    
    DEVNET("DEVNET");

    private String value;

    NetworkEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static NetworkEnum fromValue(String text) {
      for (NetworkEnum b : NetworkEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("network")
  private NetworkEnum network = null;

  @JsonProperty("capabilities")
  private List<String> capabilities = null;

  @JsonProperty("clientId")
  private String clientId = null;

  @JsonProperty("coinbase")
  private String coinbase = null;

  @JsonProperty("latestBlockNumber")
  private String latestBlockNumber = null;

  @JsonProperty("latestBlockHash")
  private String latestBlockHash = null;

  @JsonProperty("activePeers")
  private Integer activePeers = null;

  @JsonProperty("pendingTransactions")
  private Integer pendingTransactions = null;

  public InfoType network(NetworkEnum network) {
    this.network = network;
    return this;
  }

   /**
   * The connected network
   * @return network
  **/
  @ApiModelProperty(value = "The connected network")
  public NetworkEnum getNetwork() {
    return network;
  }

  public void setNetwork(NetworkEnum network) {
    this.network = network;
  }

  public InfoType capabilities(List<String> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public InfoType addCapabilitiesItem(String capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<String>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * The features supported
   * @return capabilities
  **/
  @ApiModelProperty(value = "The features supported")
  public List<String> getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(List<String> capabilities) {
    this.capabilities = capabilities;
  }

  public InfoType clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The client identifier string
   * @return clientId
  **/
  @ApiModelProperty(value = "The client identifier string")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public InfoType coinbase(String coinbase) {
    this.coinbase = coinbase;
    return this;
  }

   /**
   * The address used for establishing connections to the network
   * @return coinbase
  **/
  @ApiModelProperty(value = "The address used for establishing connections to the network")
  public String getCoinbase() {
    return coinbase;
  }

  public void setCoinbase(String coinbase) {
    this.coinbase = coinbase;
  }

  public InfoType latestBlockNumber(String latestBlockNumber) {
    this.latestBlockNumber = latestBlockNumber;
    return this;
  }

   /**
   * The number of the last block
   * @return latestBlockNumber
  **/
  @ApiModelProperty(value = "The number of the last block")
  public String getLatestBlockNumber() {
    return latestBlockNumber;
  }

  public void setLatestBlockNumber(String latestBlockNumber) {
    this.latestBlockNumber = latestBlockNumber;
  }

  public InfoType latestBlockHash(String latestBlockHash) {
    this.latestBlockHash = latestBlockHash;
    return this;
  }

   /**
   * The hash of the last block
   * @return latestBlockHash
  **/
  @ApiModelProperty(value = "The hash of the last block")
  public String getLatestBlockHash() {
    return latestBlockHash;
  }

  public void setLatestBlockHash(String latestBlockHash) {
    this.latestBlockHash = latestBlockHash;
  }

  public InfoType activePeers(Integer activePeers) {
    this.activePeers = activePeers;
    return this;
  }

   /**
   * The number of actively connected peers
   * @return activePeers
  **/
  @ApiModelProperty(value = "The number of actively connected peers")
  public Integer getActivePeers() {
    return activePeers;
  }

  public void setActivePeers(Integer activePeers) {
    this.activePeers = activePeers;
  }

  public InfoType pendingTransactions(Integer pendingTransactions) {
    this.pendingTransactions = pendingTransactions;
    return this;
  }

   /**
   * The number of transactions in pending pool
   * @return pendingTransactions
  **/
  @ApiModelProperty(value = "The number of transactions in pending pool")
  public Integer getPendingTransactions() {
    return pendingTransactions;
  }

  public void setPendingTransactions(Integer pendingTransactions) {
    this.pendingTransactions = pendingTransactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfoType infoType = (InfoType) o;
    return Objects.equals(this.network, infoType.network) &&
        Objects.equals(this.capabilities, infoType.capabilities) &&
        Objects.equals(this.clientId, infoType.clientId) &&
        Objects.equals(this.coinbase, infoType.coinbase) &&
        Objects.equals(this.latestBlockNumber, infoType.latestBlockNumber) &&
        Objects.equals(this.latestBlockHash, infoType.latestBlockHash) &&
        Objects.equals(this.activePeers, infoType.activePeers) &&
        Objects.equals(this.pendingTransactions, infoType.pendingTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, capabilities, clientId, coinbase, latestBlockNumber, latestBlockHash, activePeers, pendingTransactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfoType {\n");
    
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    coinbase: ").append(toIndentedString(coinbase)).append("\n");
    sb.append("    latestBlockNumber: ").append(toIndentedString(latestBlockNumber)).append("\n");
    sb.append("    latestBlockHash: ").append(toIndentedString(latestBlockHash)).append("\n");
    sb.append("    activePeers: ").append(toIndentedString(activePeers)).append("\n");
    sb.append("    pendingTransactions: ").append(toIndentedString(pendingTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

