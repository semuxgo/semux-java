/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Swagger codegen
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

project.version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.2'
    implementation "io.swagger:swagger-annotations:1.5.17"
    implementation "org.glassfish.jersey.core:jersey-client:2.25.1"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:2.25.1"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:2.25.1"
    implementation "com.fasterxml.jackson.core:jackson-core:2.8.9"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.8.9"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.8.9"
    implementation "com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4"
    implementation "com.brsanthu:migbase64:2.2"
    implementation 'javax.activation:activation:1.1.1'

    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
    implementation 'net.i2p.crypto:eddsa:0.3.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

// Swagger codegen


swaggerSources {
    semuxApi {
        inputFile = file('./semux-core/src/main/resources/org/semux/api/swagger/v2.5.0.json')
        code {
            language = 'java'
            configFile = file('./swagger.json')

            doLast {
                copySrcAndDocs {}
            }
        }
    }
}

task copySrc(type: Copy) {
    from './build/swagger-code-semuxApi/src/main/java'
    into './src/main/java'
}

task copyDocs(type: Copy) {
    from './build/swagger-code-semuxApi/docs'
    into './docs'
}

task prepare(dependsOn: ["generateSwaggerCode", "copySrc", "copyDocs"])
